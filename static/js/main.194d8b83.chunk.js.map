{"version":3,"sources":["components/Map.jsx","App.js","reportWebVitals.js","index.js"],"names":["mapStyles","width","height","MapContainer","google","this","props","zoom","style","initialCenter","lat","point","latitud","lng","longitud","position","Component","GoogleApiWrapper","apiKey","firebase","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","useState","setPoint","useEffect","database","ref","once","snapshot","a","data","val","Object","keys","length","console","log","className","id","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAGMA,EAAY,CAChBC,MAAO,MACPC,OAAQ,OAGGC,EAAb,4JACE,WACE,OACE,cAAC,MAAD,CACEC,OAAQC,KAAKC,MAAMF,OACnBG,KAAM,GACNC,MAAOR,EACPS,cACE,CACEC,IAAKL,KAAKC,MAAMK,MAAMC,QACtBC,IAAKR,KAAKC,MAAMK,MAAMG,UAP5B,SAWE,cAAC,SAAD,CAAQC,SAAU,CACdL,IAAKL,KAAKC,MAAMK,MAAMC,QACtBC,IAAKR,KAAKC,MAAMK,MAAMG,kBAhBlC,GAAkCE,aAuBnBC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZd,GCrBHgB,IAASC,cAAc,CACrBF,OAAQ,0CACRG,WAAY,8BACZC,YAAa,kDACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGJR,IAASS,OACJT,IAASU,YAD3B,IAkCeC,EA7BH,WACV,MAA0BC,oBAAS,GAAnC,mBAAOpB,EAAP,KAAcqB,EAAd,KASA,OAPAC,qBAAU,WACKd,IAASe,WAAWC,IAAI,iCAAiCC,KAAK,QAA9D,uCAAuE,WAAOC,GAAP,eAAAC,EAAA,sDAC9EC,EAAOF,EAASG,MACpBR,EAASO,EAAKE,OAAOC,KAAKH,GAAME,OAAOC,KAAKH,GAAMI,OAAS,KAFuB,2CAAvE,yDAIb,IACFC,QAAQC,IAAIlC,GAEV,sBAAKmC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oCACA,qBAAKA,UAAU,MAAMC,GAAG,MAAxB,SACGpC,GACD,cAACqC,EAAD,CACArC,MAAOA,EACPmC,UAAU,UAEZ,wBAAQA,UAAU,SAAlB,SACE,oBAAIA,UAAU,QAAd,SACE,oBAAIA,UAAU,OAAd,yDCrCKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.194d8b83.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '75%',\n  height: '60%'\n};\n\nexport class MapContainer extends Component {\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={\n          {\n            lat: this.props.point.latitud,\n            lng: this.props.point.longitud\n          }\n        }\n      >\n        <Marker position={{\n            lat: this.props.point.latitud,\n            lng: this.props.point.longitud\n          }} />\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCzfVzY2Of_qsDgZW6fXyQNZaq2u-8yQVc'\n})(MapContainer);","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase';\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\n\nimport Map from './components/Map';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAxx9hZjwDQREt4touQi9gNpgUxk3yqooo\",\n  authDomain: \"tegdb-a1246.firebaseapp.com\",\n  databaseURL: \"https://tegdb-a1246-default-rtdb.firebaseio.com\",\n  projectId: \"tegdb-a1246\",\n  storageBucket: \"tegdb-a1246.appspot.com\",\n  messagingSenderId: \"509166562347\",\n  appId: \"1:509166562347:web:48f37a7d622d2d90170e6e\",\n  measurementId: \"G-ZZ2NQ7RSV9\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\n\nconst App = () => {\n  const [point, setPoint] = useState(false);\n\n  useEffect(() =>{\n    const data = firebase.database().ref('datos_firebase/datos_realtime').once('value', async (snapshot) => {\n      let data = snapshot.val();\n      setPoint(data[Object.keys(data)[Object.keys(data).length - 1]]);\n    })\n  },[])\n  console.log(point);\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Posicionamiento Remoto</h1>\n      <div className=\"map\" id=\"map\">\n        {point &&         \n        <Map \n        point={point}\n        className='map'/>}\n      </div>\n      <footer className=\"footer\">\n        <ul className=\"names\">\n          <li className=\"name\">Desarrollado por Ana Ortigoza, 2021</li>\n        </ul>\n      </footer>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}